parameters:
  - name: minimumCoverage
    type: number

  - name: testMongo
    type: boolean

  - name: testRabbit
    type: boolean

  - name: testRedis
    type: boolean

steps:

  - template: test_start_containers.yml
    parameters:
      testMongo: ${{parameters.testMongo}}
      testRabbit: ${{parameters.testRabbit}}
      testRedis: ${{parameters.testRedis}}

  - script: |
      pytest --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'
    env:
      DISCORD_TOKEN_TEST: $(DISCORD_TOKEN_TEST)
      TEST_CLIENT_DISCORD_TOKEN: $(TEST_CLIENT_DISCORD_TOKEN)
      TEST_CLIENT_DISCORD_TOKEN2: $(TEST_CLIENT_DISCORD_TOKEN2)

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

  - task: PythonScript@0
    displayName: 'check coverage'
    inputs:
      scriptSource: filePath
      scriptPath: '$(BUILD_SCRIPTS_DIR)/python_check_coverage.py'
      arguments: '--minimum ${{ parameters.minimumCoverage }}'
      failOnStderr: true
