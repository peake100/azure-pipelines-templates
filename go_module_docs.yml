parameters:

  # Whether to build and publish docs.
  - name: publishDocs
    type: boolean

  # Whether to publish docs to S3.
  - name: publishDocsS3
    type: boolean

  # Whether redoc is needed
  - name: installRedoc
    type: boolean

  - name: installProtoc
    type: boolean

steps:
  # install protoc
  - script: |
      PROTOC_ZIP=protoc-3.7.1-linux-x86_64.zip
      curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/$PROTOC_ZIP
      sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
      sudo unzip -o $PROTOC_ZIP -d /usr/local 'include/*'
      rm -f $PROTOC_ZIP
      go install "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger"
    displayName: install protoc for docgen
    condition: |
      and(
        succeeded(),
        ${{ parameters.installProtoc }},
        eq(variables['Build.SourceBranch'], 'refs/heads/dev')
      )


  - script: npm install -g npx --unsafe-perm=true --allow-root
    displayName: 'install npx for redoc'
    condition: |
      and(
        succeeded(),
        ${{ parameters.installRedoc }},
        eq(variables['Build.SourceBranch'], 'refs/heads/dev')
      )

  # Build API documentation. We just need to build the source static html files here
  # and sphinx can use them.
  - script: docmodule-go
    displayName: 'Generate static API docs'
    condition: |
      and(
        succeeded(),
        ${{ parameters.publishDocs }},
        eq(variables['Build.SourceBranch'], 'refs/heads/dev')
      )

  # Build Documentation With Sphinx
  - script: python setup.py build_sphinx -E
    displayName: 'Build docs'
    condition: |
      and(
        succeeded(),
        ${{ parameters.publishDocs }},
        eq(variables['Build.SourceBranch'], 'refs/heads/dev')
      )

  # Set up docs for github pages publishing.
  - template: docs_publish_github_pages.yml
    parameters:
      publishDocs: ${{ parameters.publishDocs }}

  # Release docs on aws.
  - template: docs_publish_to_s3.yml
    parameters:
      publishDocs: ${{ parameters.publishDocs }}
      publishDocsS3: ${{ parameters.publishDocsS3 }}
